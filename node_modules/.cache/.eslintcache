[{"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/index.js":"1","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/reportWebVitals.js":"2","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/App/index.js":"3","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/App/App.js":"4","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/redux/store.js":"5","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Todo/index.js":"6","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/redux/reducer.js":"7","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Todo/types.js":"8","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Todo/Item.js":"9","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Header/Header.js":"10","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Header/HeaderWrapper.js":"11"},{"size":324,"mtime":1628451040000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1628451040000,"results":"14","hashOfConfig":"13"},{"size":44,"mtime":1628451040000,"results":"15","hashOfConfig":"13"},{"size":504,"mtime":1628667823891,"results":"16","hashOfConfig":"13"},{"size":336,"mtime":1628451040000,"results":"17","hashOfConfig":"13"},{"size":2466,"mtime":1628667307812,"results":"18","hashOfConfig":"13"},{"size":2203,"mtime":1628451040000,"results":"19","hashOfConfig":"13"},{"size":37,"mtime":1628451040000,"results":"20","hashOfConfig":"13"},{"size":3022,"mtime":1628451040000,"results":"21","hashOfConfig":"13"},{"size":1605,"mtime":1628667219041,"results":"22","hashOfConfig":"13"},{"size":330,"mtime":1628667904706,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"41xram",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/index.js",[],["49","50"],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/reportWebVitals.js",[],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/App/index.js",[],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/App/App.js",[],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/redux/store.js",[],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Todo/index.js",["51"],"import React, { useState } from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { ListGroup } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Item from \"./Item\";\nimport Header from \"../Header/Header\";\nimport { SET_VALUE } from \"./types\";\nimport HeaderWrapper from \"../Header/HeaderWrapper\";\n\nconst Todo = (props) => {\n  const dispatch = useDispatch();\n\n  const value = useSelector((state) => state.value);\n  const data = useSelector((state) => state.tasks);\n\n  // const {value, data} = useSelector(state => state);\n\n  const typing = (event) => {\n    const action = { type: SET_VALUE, payload: event.target.value };\n    dispatch(action);\n  };\n\n  const add = () => {\n    const action = { type: \"ADD_TASK\", payload: value };\n    dispatch(action);\n  };\n\n  const deleteTask = (index) => {\n    const action = { type: \"DELETE_TASK\", payload: index };\n    dispatch(action);\n  };\n\n  const editTask = (value, index) => {\n    const action = { type: \"EDIT_TASK\", payload: { value, index } };\n    dispatch(action);\n  };\n\n  const up = (index) => {\n    const action = { type: \"UP\", payload: index };\n    dispatch(action);\n  };\n\n  const down = (index) => {\n    const action = { type: \"DOWN\", payload: index };\n    dispatch(action);\n  };\n\n  const toggleCompleted = (index) => {\n    console.log(index, \"toggleCompleted\");\n\n    const action = { type: \"TOGGLE_COMPLETED\", payload: index };\n    dispatch(action);\n  };\n\n  return (\n    <HeaderWrapper>\n      <div className=\"bg-white rounded p-3 shadow Toy\">\n        <Header />\n\n        <div className=\"d-flex mb-2\">\n          <Input\n            placeholder=\"new task\"\n            className=\"me-2\"\n            value={value}\n            onChange={typing}\n          />\n          <Button color=\"primary\" onClick={add}>\n            <FontAwesomeIcon icon={faPlus} />\n          </Button>\n        </div>\n        <ListGroup>\n          {data?.map((value, index) => {\n            return (\n              <Item\n                value={value}\n                index={index}\n                deleteTask={deleteTask}\n                editTask={editTask}\n                up={up}\n                down={down}\n                toggleCompleted={toggleCompleted}\n              />\n            );\n          })}\n        </ListGroup>\n      </div>\n    </HeaderWrapper>\n  );\n};\n\nexport default Todo;\n","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/redux/reducer.js",[],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Todo/types.js",[],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Todo/Item.js",["52","53"],"import { faArrowDown, faArrowUp, faBars, faEdit, faSave, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react'\nimport { ListGroupItem } from 'reactstrap';\nimport { Button, Input } from 'reactstrap';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport styled from 'styled-components';\n\nconst ItemWrapper = styled(ListGroupItem)`\n    .completed{\n        text-decoration: line-through;\n    }\n`\n\nconst Item = ({ value: { title, completed }, index, deleteTask, editTask, up, down, toggleCompleted }) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    const [isEdit, setIsEdit] = useState(false);\n    const [value, setValue] = useState(title);\n\n    const save = () => {\n        setIsEdit(false);\n        editTask(value, index)\n    }\n\n    const cancel = () => {\n        setIsEdit(false);\n        setValue(title);\n    }\n\n    return (\n        <ItemWrapper key={index} tag=\"a\" href=\"#\" action\n            onDoubleClick={() => toggleCompleted(index)}\n            className=\"d-flex align-items-center justify-content-between\">\n            {isEdit ?\n                <Input value={value} onChange={(e) => setValue(e.target.value)} className=\"me-3 border-0\" />\n                : <span className={`${completed && \"completed\" || \"\"}`}>\n                    {index + 1}. {title}\n                </span>}\n\n            {isEdit ?\n                <div className=\"d-flex align-items-center\">\n                    <Button onClick={save} color=\"success\" className=\"me-2\"><FontAwesomeIcon icon={faSave} /> </Button>\n                    <Button onClick={cancel} color=\"danger\"><FontAwesomeIcon icon={faTimes} /> </Button>\n                </div>\n                : <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret>\n                        <FontAwesomeIcon icon={faBars} />\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem header>Functions</DropdownItem>\n                        <DropdownItem onClick={() => deleteTask(index)}>\n                            <FontAwesomeIcon icon={faTrash} /> Delete\n                        </DropdownItem>\n                        <DropdownItem onClick={() => { setIsEdit(true) }}>\n                            <FontAwesomeIcon icon={faEdit} /> Edit\n                        </DropdownItem>\n                        <DropdownItem onClick={() => { up(index) }}>\n                            <FontAwesomeIcon icon={faArrowUp} /> Up\n                        </DropdownItem>\n                        <DropdownItem onClick={() => { down(index) }}>\n                            <FontAwesomeIcon icon={faArrowDown} /> Down\n                        </DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n\n            }\n        </ItemWrapper>\n    )\n}\n\nexport default Item;\n","/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Header/Header.js",[],"/Users/dostonbekubaydullayev/Desktop/TodoAppReact-master/src/containers/Header/HeaderWrapper.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":38,"column":49,"nodeType":"64","messageId":"65","endLine":38,"endColumn":51},{"ruleId":"62","severity":1,"message":"63","line":38,"column":64,"nodeType":"64","messageId":"65","endLine":38,"endColumn":66},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]