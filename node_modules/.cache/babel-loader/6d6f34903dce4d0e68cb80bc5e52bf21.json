{"ast":null,"code":"var _jsxFileName = \"/Users/dostonbekubaydullayev/Desktop/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/src/containers/Todo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { ListGroup } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Item from \"./Item\";\nimport Header from \"../Header/Header\";\nimport { SET_VALUE } from \"./types\";\nimport HeaderWrapper from \"../Header/HeaderWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.value);\n  const data = useSelector(state => state.tasks); // const {value, data} = useSelector(state => state);\n\n  const typing = event => {\n    const action = {\n      type: SET_VALUE,\n      payload: event.target.value\n    };\n    dispatch(action);\n  };\n\n  const add = () => {\n    const action = {\n      type: \"ADD_TASK\",\n      payload: value\n    };\n    dispatch(action);\n  };\n\n  const deleteTask = index => {\n    const action = {\n      type: \"DELETE_TASK\",\n      payload: index\n    };\n    dispatch(action);\n  };\n\n  const editTask = (value, index) => {\n    const action = {\n      type: \"EDIT_TASK\",\n      payload: {\n        value,\n        index\n      }\n    };\n    dispatch(action);\n  };\n\n  const up = index => {\n    const action = {\n      type: \"UP\",\n      payload: index\n    };\n    dispatch(action);\n  };\n\n  const down = index => {\n    const action = {\n      type: \"DOWN\",\n      payload: index\n    };\n    dispatch(action);\n  };\n\n  const toggleCompleted = index => {\n    console.log(index, \"toggleCompleted\");\n    const action = {\n      type: \"TOGGLE_COMPLETED\",\n      payload: index\n    };\n    dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(HeaderWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded p-3 shadow Toy\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"new task\",\n          className: \"me-2\",\n          value: value,\n          onChange: typing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          className: \"plusButton\",\n          onClick: add,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: data === null || data === void 0 ? void 0 : data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            value: value,\n            index: index,\n            deleteTask: deleteTask,\n            editTask: editTask,\n            up: up,\n            down: down,\n            toggleCompleted: toggleCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"wol23gqnlnRr21jH1qqeNMFGVG0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/dostonbekubaydullayev/Desktop/Новая папка/src/containers/Todo/index.js"],"names":["React","useState","Button","Input","FontAwesomeIcon","faPlus","ListGroup","useDispatch","useSelector","Item","Header","SET_VALUE","HeaderWrapper","Todo","props","dispatch","value","state","data","tasks","typing","event","action","type","payload","target","add","deleteTask","index","editTask","up","down","toggleCompleted","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { ListGroup } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Item from \"./Item\";\nimport Header from \"../Header/Header\";\nimport { SET_VALUE } from \"./types\";\nimport HeaderWrapper from \"../Header/HeaderWrapper\";\n\nconst Todo = (props) => {\n  const dispatch = useDispatch();\n\n  const value = useSelector((state) => state.value);\n  const data = useSelector((state) => state.tasks);\n\n  // const {value, data} = useSelector(state => state);\n\n  const typing = (event) => {\n    const action = { type: SET_VALUE, payload: event.target.value };\n    dispatch(action);\n  };\n\n  const add = () => {\n    const action = { type: \"ADD_TASK\", payload: value };\n    dispatch(action);\n  };\n\n  const deleteTask = (index) => {\n    const action = { type: \"DELETE_TASK\", payload: index };\n    dispatch(action);\n  };\n\n  const editTask = (value, index) => {\n    const action = { type: \"EDIT_TASK\", payload: { value, index } };\n    dispatch(action);\n  };\n\n  const up = (index) => {\n    const action = { type: \"UP\", payload: index };\n    dispatch(action);\n  };\n\n  const down = (index) => {\n    const action = { type: \"DOWN\", payload: index };\n    dispatch(action);\n  };\n\n  const toggleCompleted = (index) => {\n    console.log(index, \"toggleCompleted\");\n\n    const action = { type: \"TOGGLE_COMPLETED\", payload: index };\n    dispatch(action);\n  };\n\n  return (\n    <HeaderWrapper>\n      <div className=\"bg-white rounded p-3 shadow Toy\">\n        <Header />\n\n        <div className=\"d-flex mb-2\">\n          <Input\n            placeholder=\"new task\"\n            className=\"me-2\"\n            value={value}\n            onChange={typing}\n          />\n          <Button color=\"success\" className=\"plusButton\" onClick={add}>\n            <FontAwesomeIcon icon={faPlus} />\n          </Button>\n        </div>\n        <ListGroup>\n          {data?.map((value, index) => {\n            return (\n              <Item\n                value={value}\n                index={index}\n                deleteTask={deleteTask}\n                editTask={editTask}\n                up={up}\n                down={down}\n                toggleCompleted={toggleCompleted}\n              />\n            );\n          })}\n        </ListGroup>\n      </div>\n    </HeaderWrapper>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}