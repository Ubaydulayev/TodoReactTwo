{"ast":null,"code":"let tasksLS = localStorage.getItem(\"tasks\");\nconsole.log(JSON.parse(tasksLS));\nconst initialStore = {\n  value: \"\",\n  tasks: tasksLS ? JSON.parse(tasksLS) : []\n};\n\nconst reducer = (state = initialStore, action) => {\n  let tasks, index;\n\n  switch (action.type) {\n    case \"SET_VALUE\":\n      return { ...state,\n        value: action.payload\n      };\n\n    case \"ADD_TASK\":\n      if (action.payload.trim() === \"\") return state;\n      tasks = [...state.tasks, {\n        title: action.payload\n      }];\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      return { ...state,\n        value: \"\",\n        tasks\n      };\n\n    case \"DELETE_TASK\":\n      tasks = [...state.tasks];\n      tasks.splice(action.payload, 1);\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      return { ...state,\n        tasks\n      };\n\n    case \"EDIT_TASK\":\n      tasks = [...state.tasks];\n      tasks[action.payload.index].title = action.payload.value;\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      return { ...state,\n        tasks\n      };\n\n    case \"UP\":\n      tasks = [...state.tasks];\n      index = action.payload;\n\n      if (index > 0) {\n        const temp = tasks[index - 1];\n        tasks[index - 1] = tasks[index];\n        tasks[index] = temp;\n      }\n\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      return { ...state,\n        tasks\n      };\n\n    case \"DOWN\":\n      tasks = [...state.tasks];\n      index = action.payload;\n\n      if (index < tasks.length - 1) {\n        const temp = tasks[index + 1];\n        tasks[index + 1] = tasks[index];\n        tasks[index] = temp;\n      }\n\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      return { ...state,\n        tasks\n      };\n\n    case \"TOGGLE_COMPLETED\":\n      tasks = [...state.tasks];\n      index = action.payload;\n      tasks[index].completed = !tasks[index].completed;\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      return { ...state,\n        tasks\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dostonbekubaydullayev/Desktop/TodoAppReact/src/redux/reducer.js"],"names":["tasksLS","localStorage","getItem","console","log","JSON","parse","initialStore","value","tasks","reducer","state","action","index","type","payload","trim","title","setItem","stringify","splice","temp","length","completed"],"mappings":"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","sourcesContent":["let tasksLS = localStorage.getItem(\"tasks\");\n\nconsole.log(JSON.parse(tasksLS));\n\nconst initialStore = {\n    value: \"\",\n    tasks: (tasksLS ? JSON.parse(tasksLS) : [])\n}\n\nconst reducer = (state = initialStore, action) => {\n    let tasks, index;\n\n    switch (action.type) {\n        case \"SET_VALUE\":\n            return { ...state, value: action.payload };\n\n        case \"ADD_TASK\":\n            if (action.payload.trim() === \"\") return state;\n\n            tasks = [...state.tasks, { title: action.payload }];\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n            return { ...state, value: \"\", tasks }\n\n        case \"DELETE_TASK\":\n            tasks = [...state.tasks];\n            tasks.splice(action.payload, 1);\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n            return { ...state, tasks };\n\n        case \"EDIT_TASK\":\n            tasks = [...state.tasks];\n            tasks[action.payload.index].title = action.payload.value;\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n            return { ...state, tasks };\n\n        case \"UP\":\n            tasks = [...state.tasks];\n            index = action.payload;\n            if (index > 0) {\n                const temp = tasks[index - 1];\n                tasks[index - 1] = tasks[index];\n                tasks[index] = temp;\n            }\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n            return { ...state, tasks };\n\n        case \"DOWN\":\n            tasks = [...state.tasks];\n            index = action.payload;\n            if (index < tasks.length - 1) {\n                const temp = tasks[index + 1];\n                tasks[index + 1] = tasks[index];\n                tasks[index] = temp;\n            }\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n            return { ...state, tasks };\n\n        case \"TOGGLE_COMPLETED\":\n            tasks = [...state.tasks];\n            index = action.payload;\n            tasks[index].completed = !tasks[index].completed;\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n            return { ...state, tasks };\n\n        default: return state;\n    }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}